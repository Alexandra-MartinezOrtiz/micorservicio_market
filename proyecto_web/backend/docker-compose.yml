version: "3.9"

services:
  backend:
    build: .
    container_name: fastapi_backend
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./uploads:/app/uploads
    environment:
      # Base de datos
      - DATABASE_URL=postgresql+psycopg2://postgres:postgres@db:5432/marketdb
      
      # JWT & Security
      - SECRET_KEY=mi_clave_super_secreta_para_jwt_tokens_2024
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - PASSWORD_RESET_TOKEN_EXPIRE_MINUTES=30
      
      # Email (configurar con tus datos reales)
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USERNAME=tu-email@gmail.com
      - SMTP_PASSWORD=tu-app-password
      - FROM_EMAIL=noreply@tu-empresa.com
      - SMTP_USE_TLS=true
      - SMTP_USE_SSL=false
      
      # Frontend - Puerto 4000
      - FRONTEND_URL=http://localhost:4000
      - FRONTEND_URLS=http://localhost:3000,http://localhost:4000,http://127.0.0.1:4000
      
      # Development
      - DEBUG=true
      - PYTHONPATH=/app
      - RATE_LIMIT_PER_MINUTE=60
      - DEFAULT_PAGE_SIZE=20
      - MAX_PAGE_SIZE=100
      - MAX_FILE_SIZE=10485760
      
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: marketdb
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d marketdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3200:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge

